policy_module(dyno, 1.100.1)

########################################
#
# Declarations
#

type dyno_t;
type dyno_exec_t;
init_daemon_domain(dyno_t, dyno_exec_t)

permissive dyno_t;

type dyno_initrc_exec_t;
init_script_file(dyno_initrc_exec_t)

type dyno_conf_t;
files_type(dyno_conf_t)

type dyno_var_lib_t;
files_type(dyno_var_lib_t)

type dyno_var_run_t;
files_type(dyno_var_run_t)

type dyno_port_t;
corenet_port(dyno_port_t)

########################################
#
# dyno local policy
#
allow dyno_t self:process { fork };

allow dyno_t self:fifo_file rw_fifo_file_perms;
allow dyno_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(dyno_t, dyno_conf_t, dyno_conf_t)
manage_files_pattern(dyno_t, dyno_conf_t, dyno_conf_t)

manage_dirs_pattern(dyno_t, dyno_var_lib_t, dyno_var_lib_t)
manage_files_pattern(dyno_t, dyno_var_lib_t, dyno_var_lib_t)
files_var_lib_filetrans(dyno_t, dyno_var_lib_t, { dir file })

manage_dirs_pattern(dyno_t, dyno_var_run_t, dyno_var_run_t)
manage_files_pattern(dyno_t, dyno_var_run_t, dyno_var_run_t)

sysnet_dns_name_resolve(dyno_t)
corenet_all_recvfrom_unlabeled(dyno_t)

allow dyno_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(dyno_t)
corenet_tcp_sendrecv_generic_node(dyno_t)
corenet_tcp_sendrecv_all_ports(dyno_t)
corenet_tcp_bind_generic_node(dyno_t)

gen_require(`
    type dyno_port_t;
')
allow dyno_t dyno_port_t:tcp_socket name_bind;

gen_require(`
    type dyno_port_t;
')
allow dyno_t dyno_port_t:tcp_socket name_connect;

domain_use_interactive_fds(dyno_t)

files_read_etc_files(dyno_t)

miscfiles_read_localization(dyno_t)

sysnet_dns_name_resolve(dyno_t)

allow dyno_t dyno_exec_t:file execute_no_trans;
allow dyno_t self:process setsched;
corecmd_exec_ls(dyno_t)
corenet_tcp_connect_http_port(dyno_t)
dev_read_urand(dyno_t)
fs_getattr_xattr_fs(dyno_t)
kernel_read_system_state(dyno_t)
